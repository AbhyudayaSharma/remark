.TH "MDAST" "3" "July 2015" "0.27.0" "mdast"
.SH "NAME"
\fBmdast\fR - Markdown processor
.SH "SYNOPSIS"
.P
.RS 2
.nf
var mdast \[eq] require(\[aq]mdast\[aq]);
var yamlConfig \[eq] require(\[aq]mdast-yaml-config\[aq]);

\[sl]\[sl] Use a plugin.  mdast-yaml-config allows settings in YAML frontmatter.
var processor \[eq] mdast().use(yamlConfig);

\[sl]\[sl] Parse, modify, and stringify the document:
var doc \[eq] processor.process(
    \[aq]---\[rs]n\[aq] \[pl]
    \[aq]mdast:\[rs]n\[aq] \[pl]
    \[aq]  commonmark: true\[rs]n\[aq] \[pl]
    \[aq]---\[rs]n\[aq] \[pl]
    \[aq]\[rs]n\[aq] \[pl]
    \[aq]2) Some *emphasis*, **strongness**, and \[ga]code\[ga].\[rs]n\[aq]
);
.fi
.RE
.SH "DESCRIPTION"
.P
This is the application programming interface documentation for \fBmdast\fR. To find documentation for the command line interface, see \fBman 1 mdast\fR.
.SS "mdast.use(plugin, options?)"
.P
Change the way \fBmdast\fR functions by using a plugin. Plugins are documented at \fIhttps://github.com/wooorm/mdast/blob/master/doc/plugins.md\fR.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBprocessor \[eq] mdast.use(plugin, options?)\fR;
.IP \(bu 4
\fBprocessor \[eq] mdast.use(plugins)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBplugin\fR (\fBFunction\fR) -- Plugin.
.IP \(bu 4
\fBplugins\fR (\fBArray.<Function>\fR) -- List of plugins.
.IP \(bu 4
\fBoptions\fR (\fBObject?\fR) -- Passed to plugin. Specified by its documentation.
.RE 0

.P
\fBReturns\fR
.P
\fBObject\fR -- An instance of \fBmdast\fR. The instance functions just like the \fBmdast\fR library itself (it has the same methods), but caches the \fBuse\fRd plugins.
.SS "mdast.parse(file, options?)"
.P
Parse a markdown document into an abstract syntax tree.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBast \[eq] mdast.parse(file\[ba]value, options?)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBfile\fR (\fBVFile\fR) -- Virtual file.
.IP \(bu 4
\fBvalue\fR (\fBstring\fR) -- Source of a (virtual) file.
.IP \(bu 4
\fBoptions\fR (\fBObject\fR) -- Settings. See \fBman 7 mdastconfig\fR.
.RE 0

.P
\fBReturns\fR
.P
\fBObject\fR -- Node. Nodes are documented at \fIhttps://github.com/wooorm/mdast/blob/master/doc/nodes.md\fR.
.SS "mdast.run(ast, file, done?)"
.P
Modify an abstract syntax tree by applying plugins to it.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBast \[eq] mdast.run(ast, file\[ba]value?, done?)\fR;
.IP \(bu 4
\fBast \[eq] mdast.run(ast, done?)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBast\fR (\fBObject\fR) -- Syntax tree as returned by \fBparse()\fR;
.IP \(bu 4
\fBfile\fR (\fBVFile\fR) -- Virtual file;
.IP \(bu 4
\fBvalue\fR (\fBstring\fR) -- Source of the (virtual) file;
.IP \(bu 4
\fBdone\fR (\fBfunction done(err?, doc?, file?)\fR).
.RE 0

.P
\fBReturns\fR
.P
\fBObject\fR -- Given AST.
.SS "mdast.stringify(ast?, file?, options?)"
.P
Compile an abstract syntax tree into a document.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBdoc \[eq] mdast.stringify(ast?, file?, options?)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBast\fR (\fBObject\fR) -- Syntax tree as returned by \fBparse()\fR;
.IP \(bu 4
\fBfile\fR (\fBVFile\fR) -- Virtual file;
.IP \(bu 4
\fBoptions\fR (\fBObject\fR) -- Settings. See \fBman 7 mdastconfig\fR.
.RE 0

.P
\fBReturns\fR
.P
\fBstring\fR -- Document. Formatted in markdown by default, or in whatever a plugin generates.
.P
\fBNote\fR
.P
Either an AST or a file which was previously passed to \fBmdast\[sh]parse()\fR, must be given.
.SS "mdast.process(file, options?, done?)"
.P
Parse, modify, and compile a markdown document it into something else.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBdoc \[eq] mdast.process(file\[ba]value, options?, done?)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBfile\fR (\fBFile\fR) -- File object.
.IP \(bu 4
\fBvalue\fR (\fBstring\fR) -- Source of a (virtual) file.
.IP \(bu 4
\fBoptions\fR (\fBObject\fR) -- Settings. See \fBman 7 mdastconfig\fR.
.IP \(bu 4
\fBdone\fR (\fBfunction done(err?, doc?, file?)\fR).
.RE 0

.P
\fBReturns\fR
.P
\fBstring\fR -- Document. Formatted in markdown by default, or in whatever a plugin generates.
.SS "function done(err?, doc?, file?)"
.P
Invoked when processing is complete.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBfunction done(err)\fR;
.IP \(bu 4
\fBfunction done(null, doc, file)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBexception\fR (\fBError\fR) -- Failure;
.IP \(bu 4
\fBdoc\fR (\fBstring\fR) -- Document generated by the process;
.IP \(bu 4
\fBfile\fR (\fBFile\fR) -- File object representing the input file;
.RE 0

.P
\fBReturns\fR
.P
\fBstring\fR -- Document. Formatted in markdown by default, or in whatever a plugin generates.
.SS "FileSet()"
.P
\fBmdast\fR(1) compiles multiple files using a \fBFileSet\fR instance. This set is exposed to plug-ins as an argument to the attacher. \fBFileSet\fRs should not be created by plug-ins.
.SS "File\[sh]valueOf()"
.SS "File\[sh]toJSON()"
.P
Get access to the file objects in a set.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBfiles \[eq] fileSet.valueOf()\fR.
.RE 0

.P
\fBReturns\fR
.P
\fBArray.<File>\fR -- List of files being processed by \fBmdast\fR(1).
.SS "FileSet\[sh]use(completer)"
.P
Add a completer to the middleware pipeline of a file-set. When all files are transformed, this pipeline is run and \fBcompleter\fR is invoked with \fBfileSet\fR.
.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBfileSet.use(completer)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBcompleter\fR (\fBFunction\fR).
.RE 0

.SS "FileSet\[sh]add(file\[ba]filePath)"
.P
Add a new file to be processed by \fBmdast\fR(1). The given file is processed just like other files, with a few differences.
.P
Programmatically added files are:
.RS 0
.IP \(bu 4
Ignored when their file-path is already added;
.IP \(bu 4
Never written to the file-system;
.IP \(bu 4
Not logged about.
.RE 0

.P
\fBSignatures\fR
.RS 0
.IP \(bu 4
\fBfileSet.use(filePath)\fR;
.IP \(bu 4
\fBfileSet.use(file)\fR.
.RE 0

.P
\fBParameters\fR
.RS 0
.IP \(bu 4
\fBfilePath\fR (\fBstring\fR) - Path to virtual file;
.IP \(bu 4
\fBfile\fR (\fBFile\fR) - Virtual file.
.RE 0

.SH "BUGS"
.P
\fIhttps://github.com/wooorm/mdast/issues\fR
.SH "SEE ALSO"
.P
\fBmdast\fR(1), \fBmdastconfig\fR(7).
.SH "AUTHOR"
.P
Written by Titus Wormer \fItituswormer@gmail.com\fR
